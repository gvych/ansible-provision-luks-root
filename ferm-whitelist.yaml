---
         
- hosts: new
  tasks:
    - shell: "mkdir -p /etc/docker/certs.d/gitlab.mydomain.com:5005/"
      warn: False
    - copy:
        dest: "/etc/docker/certs.d/gitlab.mydomain.com:5005/ca.crt"
        content: |
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
    - service:
        name: docker
        state: reloaded

    - lineinfile:
        dest: /etc/hosts
        line: "1.1.1.1  gitlab.mydomain.com"
    - filesystem:
        fstype: "xfs"
        dev: "/dev/mapper/vg-data"
    - lineinfile:
        dest: /etc/fstab
        line: "/dev/mapper/vg-data /var/lib/rook xfs defaults 0 2"
    - mount:
        path: "/var/lib/rook"
        src: "/dev/mapper/vg-data"
        fstype: xfs
        state: mounted

    - copy:
        dest: /etc/ferm/ferm.d/kube.conf
        content: |
          @def $NET_TRUSTED = (
          {% for host in groups['new'] %}
          {{ hostvars[host].ansible_host}}/32
          {% endfor %}
          );

          @def $KUBE_API_CLIENTS = (
          95.216.8.71/32
          );

          table filter {
            chain INPUT {
                  policy DROP;
                  interface ! eth0 ACCEPT;

                  mod state state (ESTABLISHED RELATED) ACCEPT;

                  # whitelisting of kubernetes hosts
                  saddr $NET_TRUSTED ACCEPT;

                  # whitelisting gitlab access to kubeapi
                  proto tcp saddr $KUBE_API_CLIENTS dport 6443 ACCEPT;

                  # our services to the world
                  proto tcp dport (ssh http https) ACCEPT;
              }
          }
          table nat {
            chain POSTROUTING {
              saddr 172.17.0.0/16 out-interface ! docker0 MASQUERADE;
            }
          }
    - service:
        name: ferm
        state: reloaded
